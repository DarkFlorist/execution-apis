BlockStateCalls:
  title: Array of calls to be executed at specific, optional block/state.
  properties:
    blockOverrides:
      title: Block override. When overriding block number across multiple blocks, block number not decrease or remain the same between block overrides, but skipping block numbers is acceptable.
      $ref: '#/components/schemas/BlockOverrides'
    stateOverrides:
      title: State overrides
      $ref: '#/components/schemas/StateOverrides'
    calls:
      type: array
      title: List of transactions to execute at this block/state
      items:
        $ref: '#/components/schemas/GenericCallTransaction'
StateOverrides:
  title: Accounts in state to be overridden
  type: array
  items:
    $ref: '#/components/schemas/AccountOverride'
AccountOverride:
  title: Details of an account to be overridden
  type: object
  oneOf:
    - $ref: '#/components/schemas/AccountOverrideState'
    - $ref: '#/components/schemas/AccountOverrideStateDiff'
AccountOverrideState:
  title: Account override with whole storage replacement
  required:
    - state
  properties:
    address:
      title: Address
      $ref: '#/components/schemas/address'
    nonce:
      title: Nonce
      $ref: '#/components/schemas/uint64'
    balance:
      title: Balance
      $ref: '#/components/schemas/uint256'
    code:
      title: Code
      $ref: '#/components/schemas/bytes'
    moveToAddress:
      title: MoveToAddress
      $ref: '#/components/schemas/address'
    state:
      title: Storage
      $ref: '#/components/schemas/AccountStorage'
AccountOverrideStateDiff:
  title: Account override with partial storage modification
  required:
    - stateDiff
  properties:
    address:
      title: Address
      $ref: '#/components/schemas/address'
    nonce:
      title: Nonce
      $ref: '#/components/schemas/uint64'
    balance:
      title: Balance
      $ref: '#/components/schemas/uint256'
    code:
      title: Code
      $ref: '#/components/schemas/bytes'
    moveToAddress:
      title: MoveToAddress
      $ref: '#/components/schemas/address'
    stateDiff:
      title: Storage difference
      $ref: '#/components/schemas/AccountStorage'
AccountStorage:
  title: Storage slots for an account
  type: object
  additionalProperties:
    - $ref: '#/components/schemas/hash32'
BlockOverrides:
  title: Context fields related to the block being executed
  type: object
  properties:
    number:
      title: Number
      $ref: '#/components/schemas/uint256'
    prevRandao:
      title: Randomness beacon
      $ref: '#/components/schemas/uint256'
    time:
      title: Time
      $ref: '#/components/schemas/uint256'
    gasLimit:
      title: Gas limit
      $ref: '#/components/schemas/uint64'
    feeRecipient:
      title: feeRecipient
      $ref: '#/components/schemas/address'
    baseFeePerGas:
      title: Base fee per gas
      $ref: '#/components/schemas/uint256'
MultiCallResult:
  title: Full results of multi call
  type: array
  items:
    $ref: '#/components/schemas/MultiCallBlockResult'
  errors:
    - code: -38020
      message: Block number in sequence did not increase
    - code: -38021
      message: Block timestamp in sequence did not increase
    - code: -38022
      message: MoveToAddress referenced itself in replacement
MultiCallBlockResult:
  title: Result of multicall block-level, with array of calls
  type: object
  properties:
    number:
      title: Number
      $ref: '#/components/schemas/uint256'
    hash:
      title: block hash
      $ref: '#/components/schemas/hash32'
    timestamp:
      title: Time
      $ref: '#/components/schemas/uint256'
    gasLimit:
      title: Gas limit
      $ref: '#/components/schemas/uint64'
    gasUsed:
      title: Gas used
      $ref: '#/components/schemas/uint64'
    feeRecipient:
      title: feeRecipient
      $ref: '#/components/schemas/address'
    baseFeePerGas:
      title: Base fee
      $ref: '#/components/schemas/uint256'
    calls:
      $ref: '#/components/schemas/CallResults'
CallResults:
  title: Results of multi call within block
  type: array
  items:
    anyOf:
      - $ref: '#/components/schemas/CallResultFailure'
      - $ref: '#/components/schemas/CallResultSuccess'
      - $ref: '#/components/schemas/CallResultInvalid'
CallResultFailure:
  title: Result of call failure
  type: object
  required:
    - status
    - returnData
    - error
    - gasUsed
  properties:
    status:
      title: Call Status Failure
      type: string
      pattern: ^0x0$
    returnData:
      title: Return data
      $ref: '#/components/schemas/bytes'
    gasUsed:
      title: Return gasUsed
      $ref: '#/components/schemas/uint64'
    errors:
      title: Error Object
      type: object
      properties:
        code:
          title: Error code
          type: number
          $ref: '#/components/schemas/int'
        message:
          title: Error Message (execution reverted, out of gas, etc)
          type: string
        data:
          title: Reverted, with optional message
          type: string
CallResultSuccess:
  title: Result of call success
  type: object
  required:
    - status
    - returnData
    - gasUsed
    - logs
  properties:
    status:
      title: Call Status Success
      type: string
      pattern: ^0x1$
    returnData:
      title: Return data
      $ref: '#/components/schemas/bytes'
    gasUsed:
      title: Return gasUsed
      $ref: '#/components/schemas/uint64'
    logs:
      title: Return logs
      type: array
      items:
        $ref: '#/components/schemas/CallResultLog'
CallResultInvalid:
  title: Result of call not being valid (nonce, baseFee, etc)
  type: object
  required:
    - status
    - error
  properties:
    status:
      title: Call Status Invalid
      type: string
      pattern: ^0x2$
    error:
      - code: -38010
        message: Nonce too low
      - code: -38011
        message: Nonce too high
      - code: -38012
        message: BaseFee too low
      - code: -38013
        message: Not enough gas provided to pay for intrinsic gas
      - code: -38014
        message: Insufficient funds to pay for gas fees and value
CallResultLog:
  title: log
  type: object
  required:
    - logIndex
    - blockhash
    - blockNumber
    - address
    - data
    - topics
  properties:
    logIndex:
      title: log index
      $ref: '#/components/schemas/uint256'
    blockHash:
      title: block hash
      $ref: '#/components/schemas/hash32'
    blockNumber:
      title: block number
      $ref: '#/components/schemas/uint64'
    address:
      title: address
      $ref: '#/components/schemas/address'
    data:
      title: data
      $ref: '#/components/schemas/bytes'
    topics:
      title: topics
      type: array
      items:
        $ref: '#/components/schemas/bytes32'
GenericCallTransaction:
  type: object
  title: Transaction object type for call
  properties:
    type:
      title: type
      $ref: '#/components/schemas/byte'
    nonce:
      title: nonce
      $ref: '#/components/schemas/uint64'
    to:
      title: to address
      $ref: '#/components/schemas/address'
    from:
      title: from address
      $ref: '#/components/schemas/address'
    gas:
      title: gas limit
      $ref: '#/components/schemas/uint64'
    value:
      title: value
      $ref: '#/components/schemas/uint256'
    input:
      title: input data
      $ref: '#/components/schemas/bytes'
    gasPrice:
      title: gas price
      description: The gas price willing to be paid by the sender in wei
      $ref: '#/components/schemas/uint256'
    maxPriorityFeePerGas:
      title: max priority fee per gas
      description: Maximum fee per gas the sender is willing to pay to miners in wei
      $ref: '#/components/schemas/uint256'
    maxFeePerGas:
      title: max fee per gas
      description: The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei
      $ref: '#/components/schemas/uint256'
    accessList:
      title: accessList
      description: EIP-2930 access list
      $ref: '#/components/schemas/AccessList'
